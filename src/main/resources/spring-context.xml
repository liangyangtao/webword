<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd ">
	<!-- =========引用外部属性文件========== -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				 <value>classpath:resources.properties</value> 
			</list>
		</property>
	</bean>

	<context:annotation-config />

	<!-- =============自动检测组件================== -->
  	
	<context:component-scan base-package="com.web"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	
	<!-- =============自动检测组件================== -->
	
	<context:component-scan base-package="com.unbank"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
  	
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverclass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize">
			<value>${c3p0.pool.size.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.pool.size.maxPoolSize}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.pool.size.initialPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.pool.size.maxIdleTime}</value>
		</property>
		<property name="maxIdleTimeExcessConnections">
			<value>${c3p0.pool.size.maxIdleTimeExcessConnections}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.pool.size.increment}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${c3p0.pool.size.acquireRetryAttempts}</value>
		</property>
		<property name="acquireRetryDelay">
			<value>${c3p0.pool.size.acquireRetryDelay}</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>${c3p0.pool.size.testConnectionOnCheckin}</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>${c3p0.pool.size.testConnectionOnCheckout}</value>
		</property>
		<property name="automaticTestTable">
			<value>${c3p0.pool.size.automaticTestTable}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.pool.size.idleConnectionTestPeriod}</value>
		</property>
		<property name="checkoutTimeout">
			<value>${c3p0.pool.size.checkoutTimeout}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.pool.size.maxStatements}</value>
		</property>
		<property name="maxStatementsPerConnection">
			<value>${c3p0.pool.size.maxStatementsPerConnection}</value>
		</property>		
	</bean>
	<!-- spring整合mybatis核心入口 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mapperLocations" value="${mybatis.location}" />-->
		<property name="configLocation" value="${mybatis.config.path}" />
		<!--  <property name="typeAliasesPackage" value="com.unbank.bean" />-->
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean" />
	</bean>
	<bean id="smsService" class="com.web.msg.service.impl.SmsServiceImpl"
		autowire="byName">
	</bean>

	<bean id="unbankSms" class="com.web.msg.UnbankSms" scope="singleton">
		<property name="url">
			<value>${sms.url}</value>
		</property>
		<property name="account">
			<value>${sms.account}</value>
		</property>
		<property name="password">
			<value>${sms.password}</value>
		</property>
		<property name="content0">
			<value>${sms.content.0}</value>
		</property>
		<property name="content1">
			<value>${sms.content.1}</value>
		</property>
		<property name="content2">
			<value>${sms.content.2}</value>
		</property>
		<property name="codeSize">
			<value>${sms.code.size}</value>
		</property>
		<property name="codeLen">
			<value>${sms.code.length}</value>
		</property>
		<property name="expiryTime">
			<value>${sms.expiry.time}</value>
		</property>
	</bean>
	
	<!-- ALPAYBEAN -->
	<bean id="rechargeService" class="com.web.alipay.service.impl.RechargeServiceImpl"
		autowire="byName">
	</bean>
	
	
	
	
	<!-- scan for mappers and let them be autowired -->
<!--  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.unbank.mybatis.mapper" />
    </bean>
-->

	<!-- ===========定义事务管理器(声明式的事务)=========== -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- ===========全注解事务============= -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
		<property name="basePackage" value="com.database.dao" />
	</bean>
	<!-- 加载lucene  -->
	  <import resource="../applicationContext-lucene.xml"></import>
	
</beans>


